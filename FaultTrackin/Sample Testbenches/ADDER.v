`timescale 1ns / 1ps
/* Generated by Yosys 0.9 (git sha1 1979e0b) */

module ADDER(
    data1_in0 , 
    data1_in1 , 
    data1_in2 , 
    data1_in3 , 
    data1_in4 , 
    data1_in5 , 
    data1_in6 , 
    data1_in7 , 
    data1_in8 , 
    data1_in9 , 
    data1_in10 , 
    data1_in11 , 
    data1_in12 , 
    data1_in13 , 
    data1_in14 , 
    data1_in15 , 
    data1_in16 , 
    data1_in17 , 
    data1_in18 , 
    data1_in19 , 
    data1_in20 , 
    data1_in21 , 
    data1_in22 , 
    data1_in23 , 
    data1_in24 , 
    data1_in25 , 
    data1_in26 , 
    data1_in27 , 
    data1_in28 , 
    data1_in29 , 
    data1_in30 , 
    data1_in31 , 
    data2_in0 , 
    data2_in1 , 
    data2_in2 , 
    data2_in3 , 
    data2_in4 , 
    data2_in5 , 
    data2_in6 , 
    data2_in7 , 
    data2_in8 , 
    data2_in9 , 
    data2_in10 , 
    data2_in11 , 
    data2_in12 , 
    data2_in13 , 
    data2_in14 , 
    data2_in15, 
    data2_in16 , 
    data2_in17 , 
    data2_in18 , 
    data2_in19 , 
    data2_in20 , 
    data2_in21 , 
    data2_in22 , 
    data2_in23 , 
    data2_in24 , 
    data2_in25 , 
    data2_in26 , 
    data2_in27 , 
    data2_in28 , 
    data2_in29 , 
    data2_in30 , 
    data2_in31 , 
    f,
    data_o0 , 
    data_o1 , 
    data_o2 , 
    data_o3 , 
    data_o4 , 
    data_o5 , 
    data_o6 , 
    data_o7 , 
    data_o8 , 
    data_o9 , 
    data_o10 , 
    data_o11 , 
    data_o12 , 
    data_o13 , 
    data_o14 , 
    data_o15 , 
    data_o16 , 
    data_o17 , 
    data_o18 , 
    data_o19 , 
    data_o20 , 
    data_o21 , 
    data_o22 , 
    data_o23 , 
    data_o24 , 
    data_o25 , 
    data_o26 , 
    data_o27 , 
    data_o28 , 
    data_o29 , 
    data_o30 , 
    data_o31
);
     
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  
input data1_in0;
input data1_in1;
input data1_in2;
input data1_in3;
input data1_in4;
input data1_in5;
input data1_in6;
input data1_in7;
input data1_in8;
input data1_in9;
input data1_in10;
input data1_in11;
input data1_in12;
input data1_in13;
input data1_in14;
input data1_in15;
input data1_in16;
input data1_in17;
input data1_in18;
input data1_in19;
input data1_in20;
input data1_in21;
input data1_in22;
input data1_in23;
input data1_in24;
input data1_in25;
input data1_in26;
input data1_in27;
input data1_in28;
input data1_in29;
input data1_in30;
input data1_in31;
input data2_in0;
input data2_in1;
input data2_in2;
input data2_in3;
input data2_in4;
input data2_in5;
input data2_in6;
input data2_in7;
input data2_in8;
input data2_in9;
input data2_in10;
input data2_in11;
input data2_in12;
input data2_in13;
input data2_in14;
input data2_in15;
input data2_in16;
input data2_in17;
input data2_in18;
input data2_in19;
input data2_in20;
input data2_in21;
input data2_in22;
input data2_in23;
input data2_in24;
input data2_in25;
input data2_in26;
input data2_in27;
input data2_in28;
input data2_in29;
input data2_in30;
input data2_in31;
input f;  
output data_o0;
output data_o1;
output data_o2;
output data_o3;
output data_o4;
output data_o5;
output data_o6;
output data_o7;
output data_o8;
output data_o9;
output data_o10;
output data_o11;
output data_o12;
output data_o13;
output data_o14;
output data_o15;
output data_o16;
output data_o17;
output data_o18;
output data_o19;
output data_o20;
output data_o21;
output data_o22;
output data_o23;
output data_o24;
output data_o25;
output data_o26;
output data_o27;
output data_o28;
output data_o29;
output data_o30;
output data_o31;

  
  NAND _137_ (
    .A(data2_in14 ),
    .B(data1_in14 ),
    .Y(_134_)
  );
  XOR _138_ (
    .A(data2_in14 ),
    .B(data1_in14 ),
    .Y(_135_)
  );
  OR _139_ (
    .A(data2_in13 ),
    .B(data1_in13 ),
    .Y(_136_)
  );
  NAND _140_ (
    .A(data2_in12 ),
    .B(data1_in12 ),
    .Y(_000_)
  );
  XOR _141_ (
    .A(data2_in12 ),
    .B(data1_in12 ),
    .Y(_001_)
  );
  NAND _142_ (
    .A(data2_in11 ),
    .B(data1_in11 ),
    .Y(_002_)
  );
  OR _143_ (
    .A(data2_in11 ),
    .B(data1_in11 ),
    .Y(_003_)
  );
  NAND _144_ (
    .A(data2_in10 ),
    .B(data1_in10 ),
    .Y(_004_)
  );
  XOR _145_ (
    .A(data2_in10 ),
    .B(data1_in10 ),
    .Y(_005_)
  );
  OR _146_ (
    .A(data2_in9 ),
    .B(data1_in9 ),
    .Y(_006_)
  );
  NAND _147_ (
    .A(data2_in9 ),
    .B(data1_in9 ),
    .Y(_007_)
  );
  NAND _148_ (
    .A(data2_in8 ),
    .B(data1_in8 ),
    .Y(_008_)
  );
  XOR _149_ (
    .A(data2_in8 ),
    .B(data1_in8 ),
    .Y(_009_)
  );
  NAND _150_ (
    .A(data2_in7 ),
    .B(data1_in7 ),
    .Y(_010_)
  );
  OR _151_ (
    .A(data2_in7 ),
    .B(data1_in7 ),
    .Y(_011_)
  );
  NAND _152_ (
    .A(data2_in6 ),
    .B(data1_in6 ),
    .Y(_012_)
  );
  XOR _153_ (
    .A(data2_in6 ),
    .B(data1_in6 ),
    .Y(_013_)
  );
  NAND _154_ (
    .A(data2_in5 ),
    .B(data1_in5 ),
    .Y(_014_)
  );
  OR _155_ (
    .A(data2_in5 ),
    .B(data1_in5 ),
    .Y(_015_)
  );
  NAND _156_ (
    .A(data2_in4 ),
    .B(data1_in4 ),
    .Y(_016_)
  );
  XOR _157_ (
    .A(data2_in4 ),
    .B(data1_in4 ),
    .Y(_017_)
  );
  NAND _158_ (
    .A(data2_in3 ),
    .B(data1_in3 ),
    .Y(_018_)
  );
  OR _159_ (
    .A(data2_in3 ),
    .B(data1_in3 ),
    .Y(_019_)
  );
  NAND _160_ (
    .A(data2_in2 ),
    .B(data1_in2 ),
    .Y(_020_)
  );
  NAND _161_ (
    .A(data2_in1 ),
    .B(data1_in1 ),
    .Y(_021_)
  );
  AND _162_ (
    .A(data2_in0 ),
    .B(data1_in0 ),
    .Y(_022_)
  );
  XOR _163_ (
    .A(data2_in1 ),
    .B(data1_in1 ),
    .Y(_023_)
  );
  NAND _164_ (
    .A(_022_),
    .B(_023_),
    .Y(_024_)
  );
  NAND _165_ (
    .A(_021_),
    .B(_024_),
    .Y(_025_)
  );
  XOR _166_ (
    .A(data2_in2 ),
    .B(data1_in2 ),
    .Y(_026_)
  );
  NAND _167_ (
    .A(_025_),
    .B(_026_),
    .Y(_027_)
  );
  NAND _168_ (
    .A(_020_),
    .B(_027_),
    .Y(_028_)
  );
  NAND _169_ (
    .A(_019_),
    .B(_028_),
    .Y(_029_)
  );
  NAND _170_ (
    .A(_018_),
    .B(_029_),
    .Y(_030_)
  );
  NAND _171_ (
    .A(_017_),
    .B(_030_),
    .Y(_031_)
  );
  NAND _172_ (
    .A(_016_),
    .B(_031_),
    .Y(_032_)
  );
  NAND _173_ (
    .A(_015_),
    .B(_032_),
    .Y(_033_)
  );
  NAND _174_ (
    .A(_014_),
    .B(_033_),
    .Y(_034_)
  );
  NAND _175_ (
    .A(_013_),
    .B(_034_),
    .Y(_035_)
  );
  NAND _176_ (
    .A(_012_),
    .B(_035_),
    .Y(_036_)
  );
  NAND _177_ (
    .A(_011_),
    .B(_036_),
    .Y(_037_)
  );
  NAND _178_ (
    .A(_010_),
    .B(_037_),
    .Y(_038_)
  );
  NAND _179_ (
    .A(_009_),
    .B(_038_),
    .Y(_039_)
  );
  AND _180_ (
    .A(_008_),
    .B(_039_),
    .Y(_040_)
  );
  NAND _181_ (
    .A(_007_),
    .B(_040_),
    .Y(_041_)
  );
  AND _182_ (
    .A(_006_),
    .B(_041_),
    .Y(_042_)
  );
  NAND _183_ (
    .A(_005_),
    .B(_042_),
    .Y(_043_)
  );
  NAND _184_ (
    .A(_004_),
    .B(_043_),
    .Y(_044_)
  );
  NAND _185_ (
    .A(_003_),
    .B(_044_),
    .Y(_045_)
  );
  NAND _186_ (
    .A(_002_),
    .B(_045_),
    .Y(_046_)
  );
  NAND _187_ (
    .A(_001_),
    .B(_046_),
    .Y(_047_)
  );
  NAND _188_ (
    .A(data2_in13 ),
    .B(data1_in13 ),
    .Y(_048_)
  );
  AND _189_ (
    .A(_000_),
    .B(_048_),
    .Y(_049_)
  );
  NAND _190_ (
    .A(_047_),
    .B(_049_),
    .Y(_050_)
  );
  AND _191_ (
    .A(_136_),
    .B(_048_),
    .Y(_051_)
  );
  AND _192_ (
    .A(_136_),
    .B(_050_),
    .Y(_052_)
  );
  NAND _193_ (
    .A(_135_),
    .B(_052_),
    .Y(_053_)
  );
  XOR _194_ (
    .A(_135_),
    .B(_052_),
    .Y(data_o14 )
  );
  NAND _195_ (
    .A(_134_),
    .B(_053_),
    .Y(_054_)
  );
  NAND _196_ (
    .A(data2_in15 ),
    .B(data1_in15 ),
    .Y(_055_)
  );
  OR _197_ (
    .A(data2_in15 ),
    .B(data1_in15 ),
    .Y(_056_)
  );
  AND _198_ (
    .A(_055_),
    .B(_056_),
    .Y(_057_)
  );
  XOR _199_ (
    .A(_054_),
    .B(_057_),
    .Y(data_o15 )
  );
  NAND _200_ (
    .A(data2_in16 ),
    .B(data1_in16 ),
    .Y(_058_)
  );
  XOR _201_ (
    .A(data2_in16 ),
    .B(data1_in16 ),
    .Y(_059_)
  );
  AND _202_ (
    .A(_134_),
    .B(_055_),
    .Y(_060_)
  );
  NAND _203_ (
    .A(_053_),
    .B(_060_),
    .Y(_061_)
  );
  AND _204_ (
    .A(_056_),
    .B(_061_),
    .Y(_062_)
  );
  NAND _205_ (
    .A(_059_),
    .B(_062_),
    .Y(_063_)
  );
  XOR _206_ (
    .A(_059_),
    .B(_062_),
    .Y(data_o16 )
  );
  NAND _207_ (
    .A(_058_),
    .B(_063_),
    .Y(_064_)
  );
  NAND _208_ (
    .A(data2_in17 ),
    .B(data1_in17 ),
    .Y(_065_)
  );
  OR _209_ (
    .A(data2_in17 ),
    .B(data1_in17 ),
    .Y(_066_)
  );
  AND _210_ (
    .A(_065_),
    .B(_066_),
    .Y(_067_)
  );
  XOR _211_ (
    .A(_064_),
    .B(_067_),
    .Y(data_o17 )
  );
  NAND _212_ (
    .A(data2_in18 ),
    .B(data1_in18 ),
    .Y(_068_)
  );
  XOR _213_ (
    .A(data2_in18 ),
    .B(data1_in18 ),
    .Y(_069_)
  );
  AND _214_ (
    .A(_058_),
    .B(_065_),
    .Y(_070_)
  );
  NAND _215_ (
    .A(_063_),
    .B(_070_),
    .Y(_071_)
  );
  AND _216_ (
    .A(_066_),
    .B(_071_),
    .Y(_072_)
  );
  NAND _217_ (
    .A(_069_),
    .B(_072_),
    .Y(_073_)
  );
  XOR _218_ (
    .A(_069_),
    .B(_072_),
    .Y(data_o18 )
  );
  NAND _219_ (
    .A(_068_),
    .B(_073_),
    .Y(_074_)
  );
  NAND _220_ (
    .A(data2_in19 ),
    .B(data1_in19 ),
    .Y(_075_)
  );
  OR _221_ (
    .A(data2_in19 ),
    .B(data1_in19 ),
    .Y(_076_)
  );
  AND _222_ (
    .A(_075_),
    .B(_076_),
    .Y(_077_)
  );
  XOR _223_ (
    .A(_074_),
    .B(_077_),
    .Y(data_o19 )
  );
  NAND _224_ (
    .A(data2_in20 ),
    .B(data1_in20 ),
    .Y(_078_)
  );
  XOR _225_ (
    .A(data2_in20 ),
    .B(data1_in20 ),
    .Y(_079_)
  );
  NAND _226_ (
    .A(_074_),
    .B(_076_),
    .Y(_080_)
  );
  NAND _227_ (
    .A(_075_),
    .B(_080_),
    .Y(_081_)
  );
  NAND _228_ (
    .A(_079_),
    .B(_081_),
    .Y(_082_)
  );
  XOR _229_ (
    .A(_079_),
    .B(_081_),
    .Y(data_o20 )
  );
  NAND _230_ (
    .A(_078_),
    .B(_082_),
    .Y(_083_)
  );
  NAND _231_ (
    .A(data2_in21 ),
    .B(data1_in21 ),
    .Y(_084_)
  );
  OR _232_ (
    .A(data2_in21 ),
    .B(data1_in21 ),
    .Y(_085_)
  );
  AND _233_ (
    .A(_084_),
    .B(_085_),
    .Y(_086_)
  );
  XOR _234_ (
    .A(_083_),
    .B(_086_),
    .Y(data_o21 )
  );
  NAND _235_ (
    .A(data2_in22 ),
    .B(data1_in22 ),
    .Y(_087_)
  );
  XOR _236_ (
    .A(data2_in22 ),
    .B(data1_in22 ),
    .Y(_088_)
  );
  NAND _237_ (
    .A(_083_),
    .B(_085_),
    .Y(_089_)
  );
  NAND _238_ (
    .A(_084_),
    .B(_089_),
    .Y(_090_)
  );
  NAND _239_ (
    .A(_088_),
    .B(_090_),
    .Y(_091_)
  );
  XOR _240_ (
    .A(_088_),
    .B(_090_),
    .Y(data_o22 )
  );
  NAND _241_ (
    .A(_087_),
    .B(_091_),
    .Y(_092_)
  );
  NAND _242_ (
    .A(data2_in23 ),
    .B(data1_in23 ),
    .Y(_093_)
  );
  OR _243_ (
    .A(data2_in23 ),
    .B(data1_in23 ),
    .Y(_094_)
  );
  AND _244_ (
    .A(_093_),
    .B(_094_),
    .Y(_095_)
  );
  XOR _245_ (
    .A(_092_),
    .B(_095_),
    .Y(data_o23 )
  );
  NAND _246_ (
    .A(data2_in24 ),
    .B(data1_in24 ),
    .Y(_096_)
  );
  XOR _247_ (
    .A(data2_in24 ),
    .B(data1_in24 ),
    .Y(_097_)
  );
  NAND _248_ (
    .A(_092_),
    .B(_094_),
    .Y(_098_)
  );
  NAND _249_ (
    .A(_093_),
    .B(_098_),
    .Y(_099_)
  );
  NAND _250_ (
    .A(_097_),
    .B(_099_),
    .Y(_100_)
  );
  XOR _251_ (
    .A(_097_),
    .B(_099_),
    .Y(data_o24 )
  );
  NAND _252_ (
    .A(_096_),
    .B(_100_),
    .Y(_101_)
  );
  NAND _253_ (
    .A(data2_in25 ),
    .B(data1_in25 ),
    .Y(_102_)
  );
  XOR _254_ (
    .A(data2_in25 ),
    .B(data1_in25 ),
    .Y(_103_)
  );
  NAND _255_ (
    .A(_101_),
    .B(_103_),
    .Y(_104_)
  );
  XOR _256_ (
    .A(_101_),
    .B(_103_),
    .Y(data_o25 )
  );
  NAND _257_ (
    .A(_102_),
    .B(_104_),
    .Y(_105_)
  );
  NAND _258_ (
    .A(data2_in26 ),
    .B(data1_in26 ),
    .Y(_106_)
  );
  XOR _259_ (
    .A(data2_in26 ),
    .B(data1_in26 ),
    .Y(_107_)
  );
  NAND _260_ (
    .A(_105_),
    .B(_107_),
    .Y(_108_)
  );
  XOR _261_ (
    .A(_105_),
    .B(_107_),
    .Y(data_o26 )
  );
  NAND _262_ (
    .A(_106_),
    .B(_108_),
    .Y(_109_)
  );
  NAND _263_ (
    .A(data2_in27 ),
    .B(data1_in27 ),
    .Y(_110_)
  );
  OR _264_ (
    .A(data2_in27 ),
    .B(data1_in27 ),
    .Y(_111_)
  );
  AND _265_ (
    .A(_110_),
    .B(_111_),
    .Y(_112_)
  );
  XOR _266_ (
    .A(_109_),
    .B(_112_),
    .Y(data_o27 )
  );
  NAND _267_ (
    .A(data2_in28 ),
    .B(data1_in28 ),
    .Y(_113_)
  );
  XOR _268_ (
    .A(data2_in28 ),
    .B(data1_in28 ),
    .Y(_114_)
  );
  NAND _269_ (
    .A(_109_),
    .B(_111_),
    .Y(_115_)
  );
  NAND _270_ (
    .A(_110_),
    .B(_115_),
    .Y(_116_)
  );
  NAND _271_ (
    .A(_114_),
    .B(_116_),
    .Y(_117_)
  );
  XOR _272_ (
    .A(_114_),
    .B(_116_),
    .Y(data_o28 )
  );
  NAND _273_ (
    .A(_113_),
    .B(_117_),
    .Y(_118_)
  );
  NAND _274_ (
    .A(data2_in29 ),
    .B(data1_in29 ),
    .Y(_119_)
  );
  XOR _275_ (
    .A(data2_in29 ),
    .B(data1_in29 ),
    .Y(_120_)
  );
  NAND _276_ (
    .A(_118_),
    .B(_120_),
    .Y(_121_)
  );
  XOR _277_ (
    .A(_118_),
    .B(_120_),
    .Y(data_o29 )
  );
  NAND _278_ (
    .A(_119_),
    .B(_121_),
    .Y(_122_)
  );
  NAND _279_ (
    .A(data2_in30 ),
    .B(data1_in30 ),
    .Y(_123_)
  );
  XOR _280_ (
    .A(data2_in30 ),
    .B(data1_in30 ),
    .Y(_124_)
  );
  NAND _281_ (
    .A(_122_),
    .B(_124_),
    .Y(_125_)
  );
  XOR _282_ (
    .A(_122_),
    .B(_124_),
    .Y(data_o30 )
  );
  NAND _283_ (
    .A(_123_),
    .B(_125_),
    .Y(_126_)
  );
  XOR _284_ (
    .A(data2_in31 ),
    .B(data1_in31 ),
    .Y(_127_)
  );
  XOR _285_ (
    .A(_126_),
    .B(_127_),
    .Y(data_o31 )
  );
  XOR _286_ (
    .A(data2_in0 ),
    .B(data1_in0 ),
    .Y(data_o0 )
  );
  XOR _287_ (
    .A(_022_),
    .B(_023_),
    .Y(data_o1 )
  );
  XOR _288_ (
    .A(_025_),
    .B(_026_),
    .Y(data_o2 )
  );
  AND _289_ (
    .A(_018_),
    .B(_019_),
    .Y(_128_)
  );
  XOR _290_ (
    .A(_028_),
    .B(_128_),
    .Y(data_o3 )
  );
  XOR _291_ (
    .A(_017_),
    .B(_030_),
    .Y(data_o4 )
  );
  AND _292_ (
    .A(_014_),
    .B(_015_),
    .Y(_129_)
  );
  XOR _293_ (
    .A(_032_),
    .B(_129_),
    .Y(data_o5 )
  );
  XOR _294_ (
    .A(_013_),
    .B(_034_),
    .Y(data_o6 )
  );
  AND _295_ (
    .A(_010_),
    .B(_011_),
    .Y(_130_)
  );
  XOR _296_ (
    .A(_036_),
    .B(_130_),
    .Y(data_o7 )
  );
  XOR _297_ (
    .A(_009_),
    .B(_038_),
    .Y(data_o8 )
  );
  NAND _298_ (
    .A(_006_),
    .B(_007_),
    .Y(_131_)
  );
  XOR _299_ (
    .A(_040_),
    .B(_131_),
    .Y(data_o9 )
  );
  XOR _300_ (
    .A(_005_),
    .B(_042_),
    .Y(data_o10 )
  );
  AND _301_ (
    .A(_002_),
    .B(_003_),
    .Y(_132_)
  );
  XOR _302_ (
    .A(_044_),
    .B(_132_),
    .Y(data_o11 )
  );
  XOR _303_ (
    .A(_001_),
    .B(_046_),
    .Y(data_o12 )
  );
  NAND _304_ (
    .A(_000_),
    .B(_047_),
    .Y(_133_)
  );
  XOR _305_ (
    .A(_051_),
    .B(_133_),
    .Y(data_o13 )
  );
endmodule



module BUF(A, Y);

input A;

output Y;

assign Y = A;

endmodule



module NOT(A, Y);

input A;

output Y;

assign Y = ~A;

endmodule



module AND(A, B, Y);

input A, B;

output Y;

assign Y = A & B;

endmodule



module NAND(A, B, Y);

input A, B;

output Y;

assign Y = ~(A & B);

endmodule



module OR(A, B, Y);

input A, B;

output Y;

assign Y = A | B;

endmodule



module NOR(A, B, Y);

input A, B;

output Y;

assign Y = ~(A | B);

endmodule



module XOR(A, B, Y);

input A, B;

output Y;

assign Y = A ^ B;

endmodule



module DFF(C, D, Q);

input C, D;

output reg Q;

always @(posedge C)

	Q <= D;

endmodule



module DFFSR(C, D, Q, S, R);

input C, D, S, R;

output reg Q;

always @(posedge C, posedge S, posedge R)

	if (S)

		Q <= 1'b1;

	else if (R)

		Q <= 1'b0;

	else

		Q <= D;

endmodule
